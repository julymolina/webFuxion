name: Build
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  firebase-deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - deployEntity: epigenetica
            environment: prod
    steps:
      - uses: actions/checkout@v2
      - uses: chrnorm/deployment-action@releases/v1
        name: Create GitHub deployment
        id: deployment
        with:
          token: "${{ github.token }}"
          environment: ${{ matrix.deployEntity }}
      - name: Cache node modules
        uses: actions/cache@v1
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install Dependencies
        run: npm install
      - name: Build
        env:
          ENVIRONMENT: ${{ matrix.environment }}
        #   #HOME_INITIAL_PAGE: ${{ matrix.home }}
        #   #SEO_TITLE: ${{ matrix.seoTitle }}
        run: npm run build
      - uses: w9jds/firebase-action@master
        with:
          # args: deploy --only hosting:${{ matrix.deployEntity }}
          args: deploy --only hosting
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          DEPLOY_ENTITY: ${{ matrix.deployEntity }}
      - name: Update deployment status (success)
        if: success()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: "${{ github.token }}"
          state: "success"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
      - name: Update deployment status (failure)
        if: failure()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: "${{ github.token }}"
          state: "failure"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
